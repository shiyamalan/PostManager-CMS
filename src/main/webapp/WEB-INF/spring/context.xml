<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/mvc
        	http://www.springframework.org/schema/mvc/spring-mvc.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
			http://www.springframework.org/schema/security">


	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->

	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/resources/**" location="/theme" />
	<resources mapping="/bootstrap/**" location="/bootstrap/" />
	<resources mapping="/dist/**" location="/dist/" />
	<resources mapping="/plugin/**" location="/plugin/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/pages/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/cmsproject" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>local.cms.web.models.User</beans:value>
				<beans:value>local.cms.web.models.UserRole</beans:value>
				<beans:value>local.cms.web.models.Post</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	<beans:bean id="userService" class="local.cms.web.services.UserServiceImpl">
		<beans:property name="userDao" ref="userdao"></beans:property>
		<beans:property name="roleDao" ref="roledao"></beans:property>
	</beans:bean>

	<beans:bean id="userdao" class="local.cms.web.dao.UserDAOImpl">
		<beans:property name="sessionFactory" ref="sessionFactory"></beans:property>
	</beans:bean>

	<beans:bean id="roledao" class="local.cms.web.dao.RoleDAOImpl">
	</beans:bean>
	<beans:bean id="mainAdminController"
		class="local.cms.web.admin.controller.MainAdminController">
		<beans:property name="userService" ref="userService"></beans:property>
		<beans:property name="roleService" ref="roleService"></beans:property>
		<beans:property name="postService" ref="postService"></beans:property>
	</beans:bean>

	<beans:bean id="userController"
		class="local.cms.web.user.controller.UserController">
		<beans:property name="postService" ref="postService"></beans:property>
		<beans:property name="roleService" ref="roleService"></beans:property>
	</beans:bean>
	<beans:bean id="loginController"
		class="local.cms.web.login.controller.LoginController">
		<beans:property name="userService" ref="userService"></beans:property>
		<beans:property name="postService" ref="postService"></beans:property>
		<beans:property name="roleService" ref="roleService"></beans:property>
	</beans:bean>

	<beans:bean id="webPageController"
		class="local.cms.web.pages.controller.WebPageController">
		<beans:property name="postService" ref="postService"></beans:property>
		<beans:property name="roleService" ref="roleService"></beans:property>
	</beans:bean>

	<beans:bean id="roleService" class="local.cms.web.services.RoleServiceImpl">
		<beans:property name="roleDao" ref="roleDAO"></beans:property>
	</beans:bean>

	<beans:bean id="roleDAO" class="local.cms.web.dao.RoleDAOImpl">
		<beans:property name="sessionFactory" ref="sessionFactory"></beans:property>
	</beans:bean>

	<beans:bean id="postService" class="local.cms.web.services.PostServiceImpl">
		<beans:property name="postDAO" ref="postDAO"></beans:property>
	</beans:bean>

	<beans:bean id="postDAO" class="local.cms.web.dao.PostDAOImpl">
		<beans:property name="sessionFactory" ref="sessionFactory"></beans:property>
	</beans:bean>


	<context:component-scan base-package="local.cms.web" />

	<tx:annotation-driven transaction-manager="transactionManager" />
	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>


</beans:beans>
